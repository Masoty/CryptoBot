from aiogram import types
from aiogram.dispatcher import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from data.texts import text_registration
from db.db import session_db
from db.models import Person
from until import register_refers_line
from fun.view import about_bot, menu, send_number


@session_db
async def start(message: types.Message, state: FSMContext, session: AsyncSession):

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å—Ä–∞–∑—É –≤ –º–µ–Ω—é
    is_register = await Person.is_register(message.chat.id, session)
    if is_register:
        return await menu(message)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∞
    if "/start " in message.text:

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞
        refer_id = message.text.replace("/start ", "")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º id –ª–∏ –µ—Ç–æ, –∞ –Ω–µ —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç
        if refer_id.isnumeric():

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ñ–µ—Ä, –∏–ª–∏ –µ—Ç–æ —Ñ–µ–π–∫–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä
            is_refer = await Person.is_register(int(refer_id), session)

            # –ï—Å–ª–∏ —ç—Ç–æ—Ç —Ä–µ—Ñ–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if is_refer:
                is_register = await Person.is_register(message.chat.id, session)

                # –ï—Å–ª–∏ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                if is_register:
                    await menu(message)
                else:
                    # –ï—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
                    await Person.register(user_id=message.chat.id, first_name=message.from_user.first_name, refer=int(refer_id), username=message.from_user.username, session=session)
                    await register_refers_line(message, session)
                    await send_number(message, state, session)
            else:
                await message.answer("‚õî –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –Ω–µ–≤–µ—Ä–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ\n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —É —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∑–∞–ª –≤–∞–º –ø—Ä–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ üëâ @ASTERISUPPORT")
        else:
            await message.answer(
                "‚õî –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –Ω–µ–≤–µ—Ä–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ\n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —É —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∑–∞–ª –≤–∞–º –ø—Ä–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ üëâ @ASTERISUPPORT")
    else:
        await message.answer("‚õî –î–æ—Å—Ç—É–ø –≤ –±–æ—Ç –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —É —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∑–∞–ª –≤–∞–º –ø—Ä–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ üëâ @ASTERISUPPORT")




